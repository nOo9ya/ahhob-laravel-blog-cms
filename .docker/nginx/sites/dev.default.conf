# HTTP 서버 (개발 편의성을 위해 유지)
server {
    listen 80;
    listen [::]:80;

    # 모든 HTTP 요청을 HTTPS로 영구 리다이렉트 (301)
    return 301 https://$host$request_uri;
}

# HTTP to HTTPS 리다이렉트 (선택사항)
# server {
#     listen 80;
#     listen [::]:80;
#     server_name localhost;
#     return 301 https://$server_name$request_uri;
# }

# HTTPS 설정
server {
    listen 443 ssl;
    listen [::]:443 ssl;
    
    server_name localhost;
    root /var/www/public;

    index index.php index.html;

    # 파일 업로드 크기 제한
    client_max_body_size 128M;
    
    # SSL 인증서 경로
    # ssl_certificate /etc/nginx/ssl/cert.pem;
    # ssl_certificate_key /etc/nginx/ssl/key.pem;
    ssl_certificate /etc/nginx/ssl/default.crt;
    ssl_certificate_key /etc/nginx/ssl/default.key;

    # HTTP/2 활성화
    http2 on;
    
    # SSL 보안 설정
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_prefer_server_ciphers on;
    ssl_ciphers ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384;
    ssl_session_cache shared:SSL:10m;
    ssl_session_timeout 10m;
    ssl_session_tickets off;
    
    # SSL 보안 헤더
    add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;

    # 로그 설정
    access_log /var/log/nginx/access_ssl.log;
    error_log /var/log/nginx/error_ssl.log;

    # 보안 헤더
    add_header X-Frame-Options "SAMEORIGIN";
    add_header X-XSS-Protection "1; mode=block";
    add_header X-Content-Type-Options "nosniff";
    add_header Referrer-Policy "no-referrer-when-downgrade" always;
    add_header Content-Security-Policy "ddefault-src 'self'; script-src 'self'; style-src 'self'" always;

    # Gzip 압축
    gzip on;
    gzip_vary on;
    gzip_min_length 1024;
    # gzip_proxied any;
    gzip_proxied expired no-cache no-store private auth;
    gzip_types
        text/plain
        text/css
        text/xml
        text/javascript
        application/javascript
        application/x-javascript
        application/xml+rss
        application/json;

    # Laravel 라우팅 설정
    location / {
        try_files $uri $uri/ /index.php?$query_string;
    }

    # PHP 파일 처리
    location ~ \.php$ {
        try_files $uri =404;
        fastcgi_split_path_info ^(.+\.php)(/.+)$;
        fastcgi_pass php:9000;
        fastcgi_index index.php;
        fastcgi_param SCRIPT_FILENAME $realpath_root$fastcgi_script_name;
        fastcgi_param PATH_INFO $fastcgi_path_info;
        fastcgi_param HTTPS on;
        fastcgi_param REQUEST_SCHEME https;
        include fastcgi_params;
        fastcgi_hide_header X-Powered-By;

        # PHP-FPM 타임아웃 설정
        fastcgi_read_timeout 300;
        fastcgi_connect_timeout 300;
        fastcgi_send_timeout 300;

        # 버퍼 크기 설정
        fastcgi_buffer_size 32k;
        fastcgi_buffers 4 32k;
    }

    # Laravel 스토리지 파일 접근
    #location /storage {
    #    alias /var/www/storage/app/public;
    #    expires 1y;
    #    add_header Cache-Control "public, immutable";
    #    try_files $uri =404;
    #}

    # 정적 파일 캐싱
    location ~ \.(gif|jpg|png)$ {
        add_header Vary "Accept-Encoding";
        add_header Cache-Control "public, no-transform, max-age=31536000";
    }

    location ~* \.(css|js)$ {
        add_header Cache-Control "public";
        expires 6m;
        log_not_found off;
        access_log off;
    }

    location ~*.(mp4|ogg|ogv|svg|svgz|eot|otf|woff|woff2|ttf|rss|atom|ico|zip|tgz|gz|rar|bz2|doc|xls|exe|ppt|tar|mid|midi|wav|bmp|rtf|cur)$ {
        add_header Cache-Control "max-age=31536000";
        access_log off;
    }

    # Block (log file, binary, certificate, shell script, sql dump file) access.
    location ~* \.(log|binary|pem|enc|crt|conf|cnf|sql|sh|key|yml|lock)$ {
        deny all;
    }

    location ~ /\.ht {
        deny all;
    }

    # 보안: 숨겨진 파일 및 디렉토리 차단
    location ~ /\. {
        deny all;
        access_log off;
        log_not_found off;
    }

    # .env 설정 파일 보호
    location ~ /\.env {
        deny all;
        access_log off;
        log_not_found off;
    }

    # Laravel artisan 보호
    location ~ artisan {
        deny all;
        access_log off;
        log_not_found off;
    }

    # Composer 파일 보호
    location ~ composer\.(json|lock) {
        deny all;
        access_log off;
        log_not_found off;
    }

    # package.json 등 Node.js 파일 보호
    location ~ package.*\.json {
        deny all;
        access_log off;
        log_not_found off;
    }

    # 기타 민감한 파일들 보호
    location ~ \.(yml|yaml|conf|ini)$ {
        deny all;
        access_log off;
        log_not_found off;
    }

    # robots.txt (있는 경우)
    location = /robots.txt {
        access_log off;
        log_not_found off;
    }

    # favicon.ico (있는 경우)
    location = /favicon.ico {
        access_log off;
        log_not_found off;
    }

    location ~ /\.(?!well-known).* {
        deny all;
    }
}